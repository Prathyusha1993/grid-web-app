[{"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\header.jsx":"4","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\login.jsx":"5","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\search.jsx":"6","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\agGrid.jsx":"7","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGrid.jsx":"8","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\AppOld.js":"9","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Search.jsx":"10","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\invoiceService.js":"11","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\constants.js":"12","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\loginService.js":"13","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Dashboard.jsx":"14","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGridSpecific\\CustomLoadingCellRenderer.jsx":"15"},{"size":549,"mtime":1613013207376,"results":"16","hashOfConfig":"17"},{"size":813,"mtime":1613013254548,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":358,"mtime":1612999325513,"results":"20","hashOfConfig":"17"},{"size":2781,"mtime":1613011826707,"results":"21","hashOfConfig":"17"},{"size":5344,"mtime":1613010321977,"results":"22","hashOfConfig":"17"},{"size":10601,"mtime":1612940273597,"results":"23","hashOfConfig":"17"},{"size":9878,"mtime":1613012638219,"results":"24","hashOfConfig":"17"},{"size":1142,"mtime":1612939982201,"results":"25","hashOfConfig":"17"},{"size":5344,"mtime":1613010321977,"results":"26","hashOfConfig":"17"},{"size":1943,"mtime":1613008873559,"results":"27","hashOfConfig":"17"},{"size":123,"mtime":1612945660349,"results":"28","hashOfConfig":"17"},{"size":1307,"mtime":1613011365325,"results":"29","hashOfConfig":"17"},{"size":769,"mtime":1613010366803,"results":"30","hashOfConfig":"17"},{"size":404,"mtime":1613012342099,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19kkymj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\index.js",[],["69","70"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\App.js",["71"],"//import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport Header from \"./components/header\";\r\nimport Login from \"./components/login\";\r\nimport { Switch, Route, NavLink, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div className=\"header\">\r\n            <Header to=\"/login\"/>\r\n          </div>\r\n          <div className=\"content\">\r\n            <Switch>\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/dashboard\" component={Dashboard} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\header.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\login.jsx",["72","73","74"],"import React, { useState, Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {fetchAuthToken} from '../services/loginService'\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email: '',\r\n            password: '',\r\n            token:'',\r\n            navigate: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({ [e.target.name]: e.target.value})\r\n    }\r\n\r\n    // handleLogin = (e) => {\r\n    //     e.preventDefault();\r\n    //     fetchAuthToken()\r\n    //         .then(authToken => {\r\n    //             window.localStorage.setItem('AUTH-TOKEN', authToken);\r\n    //             this.setState({\r\n    //                 navigate: true\r\n    //             });\r\n    //         });\r\n    // }\r\n\r\n    /**\r\n     * 1. Prevent auto form submit\r\n     * 2. Fetch auth token\r\n     * 3. Set auth token in localStorage\r\n     * 4. Redirect to dashboard.\r\n     */\r\n    handleLogin = (e) => {\r\n         e.preventDefault();\r\n         fetchAuthToken()\r\n            .then(authToken => {\r\n                // Todo: Move AUTH-TOKEN to constants.\r\n                window.localStorage.setItem('AUTH-TOKEN', authToken);\r\n                window.location.href = '/dashboard'\r\n            });\r\n    }\r\n\r\n    render(){\r\n        // if(this.state.navigate) {\r\n        //     return <Redirect to='/dashboard' push={true}/>\r\n        // }\r\n        return(\r\n            <div className=\"Login\">\r\n                <h3>Login</h3><br />\r\n                <Form onSubmit={this.handleLogin}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label className=\"font-weight-bold\">Email: </Form.Label>\r\n                        <Form.Control \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        value={this.state.email} \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter email\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label className=\"font-weight-bold\">Password: </Form.Label>\r\n                        <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Enter password\"/>\r\n                    </Form.Group >\r\n                    <button type=\"submit\" className=\"btn-lg btn-block\"  onClick={this.handleLogin}>Sign In</button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Login;","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\search.jsx",["75"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\agGrid.jsx",["76"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGrid.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\AppOld.js",["77","78","79","80","81"],"//import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport Header from \"./components/header\";\nimport Login from \"./components/login\";\nimport Search from './components/search'\nimport { Switch, Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport AgGrid from './components/AgGrid'\n\n\nclass App extends Component {\n  state={\n  \n  };\n\n  render() {\n    return(\n      <Router>\n        <div>\n          <Header />\n          <br />\n          {/* <Switch>\n            <Route exact path=\"/\">\n              <Login />\n            </Route>\n          </Switch> */}\n          <Search />\n          <AgGrid />\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n\n\n{/* <div>\n        <Router>\n          <Header />\n          {!this.state.user ? (\n            <Login />\n          ): (\n            <Link to=\"/\" onClick={this.logout}>Logout</Link>\n          )}\n          <Search />\n          <TableInfo />\n        </Router>\n         <Switch>\n          <Route />    first i have to kepp search and tableinfo in one file and then route that path to login \n        </Switch> \n      </div> */}\n    ",["82","83"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Search.jsx",["84","85"],"import React, { Component } from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\n\r\nfunction validate(MRN) {\r\n  const errors = [];\r\n\r\n  if (MRN.length === 0) {\r\n    errors.push(\"atleast one field entry is required\");\r\n  }\r\n  return errors;\r\n}\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      MRN: \"\",\r\n      errors: [],\r\n      Invoice_Num:\"\",\r\n      Patient_First_Name:\"\",\r\n      Patient_Last_Name:\"\",\r\n      DateOfBirth:\"\",\r\n      Guarantor_Name:\"\",\r\n      DateOfService:\"\",\r\n      results: []\r\n    }\r\n  }\r\n\r\n\r\n  // handleSearch = (e) => {\r\n  //   e.preventDefault();\r\n  //   const { MRN } = this.state;\r\n  //   const errors = validate(MRN);\r\n  //   if (errors.length > 0) {\r\n  //     this.setState({ errors });\r\n  //     return;\r\n  //   }\r\n  // };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const searchParams = {\r\n      Invoice_Num: this.state.Invoice_Num,\r\n      MRN: this.state.MRN,\r\n      Patient_First_Name: this.state.Patient_First_Name,\r\n      Patient_Last_Name: this.state.Patient_Last_Name,\r\n      DateOfBirth: this.state.DateOfBirth,\r\n      Guarantor_Name: this.state.Guarantor_Name,\r\n      DateOfService: this.state.DateOfService,\r\n    }; // construct from state \r\n    this.props.onSearch(searchParams);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name] : e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const mystyle = {\r\n      position: \"relative\",\r\n      top: \"45%\",\r\n      width: \"200px\",\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {/* {errors.map((error) => (\r\n            <p style={{ color: \"red\" }} key={error}>\r\n              Error: {error}\r\n            </p>\r\n          ))} */}\r\n          <Form.Row>\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridInvoiceNum\" >\r\n              <Form.Label className=\"font-weight-bold\">Invoice # </Form.Label>\r\n              <Form.Control type=\"number\" name=\"Invoice_Num\" value={this.state.Invoice_Num} onChange={this.handleChange}  style={{border:\".5pxpx solid black\"}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridFirstName\" >\r\n              <Form.Label className=\"font-weight-bold\">First Name </Form.Label>\r\n              <Form.Control type=\"text\"  name=\"Patient_First_Name\" value={this.state.Patient_First_Name}  onChange={this.handleChange}style={{border:\".5pxpx solid black\"}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridLastName\" >\r\n              <Form.Label className=\"font-weight-bold\">Last Name </Form.Label>\r\n              <Form.Control type=\"text\" name=\"Patient_Last_Name\" value={this.state.Patient_Last_Name}  onChange={this.handleChange} style={{border:\".5pxpx solid black\"}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridMRN\">\r\n              <Form.Label className=\"font-weight-bold\">MRN </Form.Label>\r\n              <Form.Control type=\"text\"  name=\"MRN\" value={this.state.MRN} onChange={this.handleChange} style={{border:\".5pxpx solid black\"}}/>\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridDOS\" className=\"col-md-3 mb-3\">\r\n              <Form.Label className=\"font-weight-bold\">\r\n                Date Of Service\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                min=\"1900-01-01\"\r\n                max=\"2999-12-31\"\r\n                placeholder=\"dos\"\r\n                value={this.state.DateOfService}\r\n                name=\"DateOfService\"\r\n                onChange={this.handleChange}\r\n                style={{border:\".5pxpx solid black\"}}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridDOB\" className=\"col-md-3 mb-3\">\r\n              <Form.Label className=\"font-weight-bold\">Date Of Birth </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                min=\"1900-01-01\"\r\n                max=\"2999-12-31\"\r\n                placeholder=\"dob\"\r\n                value={this.state.DateOfBirth}\r\n                name=\"DateOfBirth\"\r\n                onChange={this.handleChange}\r\n                style={{border:\".5pxpx solid black\"}}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridName\" className=\"col-md-3 mb-3\">\r\n              <Form.Label className=\"font-weight-bold\">\r\n                Guarantor Name\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" \r\n              value={this.state.Guarantor_Name}\r\n              name=\"Guarantor_Name\"\r\n              onChange={this.handleChange}\r\n              style={{border:\".5pxpx solid black\"}}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} xs=\"auto\" controlId=\"formGridName\" className=\"col-md-3 mb-3\">\r\n            <Form.Label> </Form.Label>\r\n            <Button style={mystyle} type=\"submit\" >\r\n              Search\r\n            </Button>\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\invoiceService.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\constants.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\loginService.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Dashboard.jsx",["86"],"import React, {Component} from 'react';\r\nimport Search from './Search'\r\nimport AgGrid from './AgGrid'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            searchParams: {},\r\n        }\r\n    }\r\n\r\n    handleSearch = (searchParams) => {\r\n        this.setState({\r\n          searchParams: searchParams,\r\n        });\r\n      };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {/* Welcome user! */}\r\n                <Search onSearch={this.handleSearch}/>\r\n                <AgGrid searchParams={this.state.searchParams}/>\r\n                {/* <Link to=\"/logout\"></Link> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGridSpecific\\CustomLoadingCellRenderer.jsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":25,"nodeType":"93","messageId":"94","endLine":6,"endColumn":32},{"ruleId":"91","severity":1,"message":"95","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"96","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"98","line":68,"column":13,"nodeType":"93","messageId":"94","endLine":68,"endColumn":19},{"ruleId":"91","severity":1,"message":"99","line":11,"column":8,"nodeType":"93","messageId":"94","endLine":11,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"101","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"102","line":7,"column":18,"nodeType":"93","messageId":"94","endLine":7,"endColumn":23},{"ruleId":"91","severity":1,"message":"103","line":7,"column":25,"nodeType":"93","messageId":"94","endLine":7,"endColumn":29},{"ruleId":"104","severity":1,"message":"105","line":39,"column":1,"nodeType":"106","messageId":"107","endLine":53,"endColumn":17},{"ruleId":"87","replacedBy":"108"},{"ruleId":"89","replacedBy":"109"},{"ruleId":"91","severity":1,"message":"110","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":59,"column":13,"nodeType":"93","messageId":"94","endLine":59,"endColumn":19},{"ruleId":"91","severity":1,"message":"103","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Redirect' is defined but never used.","'Button' is defined but never used.","'errors' is assigned a value but never used.","'Search' is defined but never used.","'Login' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["111"],["112"],"'validate' is defined but never used.","no-global-assign","no-unsafe-negation"]