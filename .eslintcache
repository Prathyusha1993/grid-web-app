[{"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\header.jsx":"4","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\login.jsx":"5","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\search.jsx":"6","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\agGrid.jsx":"7","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGrid.jsx":"8","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Search.jsx":"9","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\invoiceService.js":"10","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\constants.js":"11","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\loginService.js":"12","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Dashboard.jsx":"13","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGridSpecific\\CustomLoadingCellRenderer.jsx":"14","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\utils\\util.js":"15","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Logout.jsx":"16"},{"size":549,"mtime":1613013207376,"results":"17","hashOfConfig":"18"},{"size":1343,"mtime":1613027754917,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1019,"mtime":1613024923438,"results":"21","hashOfConfig":"18"},{"size":3946,"mtime":1613027190212,"results":"22","hashOfConfig":"18"},{"size":5344,"mtime":1613010321977,"results":"23","hashOfConfig":"18"},{"size":10601,"mtime":1612940273597,"results":"24","hashOfConfig":"18"},{"size":14952,"mtime":1613028867802,"results":"25","hashOfConfig":"18"},{"size":9299,"mtime":1613014132049,"results":"26","hashOfConfig":"18"},{"size":1943,"mtime":1613008873559,"results":"27","hashOfConfig":"18"},{"size":123,"mtime":1612945660349,"results":"28","hashOfConfig":"18"},{"size":789,"mtime":1613024912141,"results":"29","hashOfConfig":"18"},{"size":708,"mtime":1613027807076,"results":"30","hashOfConfig":"18"},{"size":404,"mtime":1613012342099,"results":"31","hashOfConfig":"18"},{"size":110,"mtime":1613016614451,"results":"32","hashOfConfig":"18"},{"size":527,"mtime":1613016633106,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"19kkymj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\index.js",[],["70","71"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\App.js",["72","73"],"//import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport Login from \"./components/login\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport { isUserLoggedIn } from \"./utils/util\";\r\n\r\nclass App extends Component {\r\n\r\n    conditionalRender = () => {\r\n        if(isUserLoggedIn()) {\r\n            return <Dashboard />\r\n        } else {\r\n            return <Login />;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <div>\r\n                        <Route \r\n                            exact \r\n                            path=\"/\" \r\n                            render={() => this.conditionalRender()} />\r\n                        <Route \r\n                            exact \r\n                            path=\"/login\" \r\n                            render={() => this.conditionalRender()} />\r\n                        <Route \r\n                            exact \r\n                            path=\"/dashboard\" \r\n                            render={() => this.conditionalRender()} />\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\header.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\login.jsx",["74"],"import React, { useState, Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Header from \"./header\";\r\nimport { authenticateAndFetchUserDetails } from \"../services/loginService\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            token: \"\",\r\n            isAuthenticationfailed: \"UNKNOWN\",\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    /**\r\n     * 1. Prevent auto form submit\r\n     * 2. Fetch auth token\r\n     * 3. Set auth token in localStorage\r\n     * 4. Redirect to dashboard.\r\n     */\r\n    handleLogin = (e) => {\r\n        e.preventDefault();\r\n        authenticateAndFetchUserDetails(this.state.email, this.state.password)\r\n            .then((userDetails) => {\r\n                this.setState({\r\n                    isAuthenticationfailed: \"NO\",\r\n                });\r\n                // Todo: Move AUTH-TOKEN to constants.\r\n                window.localStorage.setItem(\r\n                    \"AUTH-TOKEN\",\r\n                    userDetails.AuthToken\r\n                );\r\n                window.localStorage.setItem(\"USER-EMAIL\", userDetails.Email);\r\n                window.location.href = \"/dashboard\";\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                this.setState({\r\n                    isAuthenticationfailed: \"YES\",\r\n                });\r\n            });\r\n    };\r\n\r\n    validateForm = () => {\r\n        return (\r\n            this.state.email &&\r\n            this.state.email.length > 0 &&\r\n            this.state.password &&\r\n            this.state.password.length > 0\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"Login\">\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label className=\"font-weight-bold\">\r\n                                Email:{\" \"}\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Enter email\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label className=\"font-weight-bold\">\r\n                                Password:{\" \"}\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Enter password\"\r\n                            />\r\n                        </Form.Group>\r\n                        {this.state.isAuthenticationfailed === \"YES\" && (\r\n                            <div style={{ color: \"re\" }}>\r\n                                Invalid credentials\r\n                            </div>\r\n                        )}\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn-lg btn-block\"\r\n                            onClick={this.handleLogin}\r\n                            style={{ background: \"#4CAF50\" }}\r\n                            disabled={!this.validateForm()}\r\n                        >\r\n                            Sign In\r\n                        </button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\search.jsx",["75"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\agGrid.jsx",["76"],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGrid.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Search.jsx",["77","78"],"import React, { Component } from \"react\";\r\nimport { Form, Col, Button } from \"react-bootstrap\";\r\n\r\nfunction validate(MRN) {\r\n    const errors = [];\r\n\r\n    if (MRN.length === 0) {\r\n        errors.push(\"atleast one field entry is required\");\r\n    }\r\n    return errors;\r\n}\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            MRN: \"\",\r\n            errors: [],\r\n            Invoice_Num: \"\",\r\n            Patient_First_Name: \"\",\r\n            Patient_Last_Name: \"\",\r\n            DateOfBirth: \"\",\r\n            Guarantor_Name: \"\",\r\n            DateOfService: \"\",\r\n            results: [],\r\n        };\r\n    }\r\n\r\n    // handleSearch = (e) => {\r\n    //   e.preventDefault();\r\n    //   const { MRN } = this.state;\r\n    //   const errors = validate(MRN);\r\n    //   if (errors.length > 0) {\r\n    //     this.setState({ errors });\r\n    //     return;\r\n    //   }\r\n    // };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const searchParams = {\r\n            Invoice_Num: this.state.Invoice_Num,\r\n            MRN: this.state.MRN,\r\n            Patient_First_Name: this.state.Patient_First_Name,\r\n            Patient_Last_Name: this.state.Patient_Last_Name,\r\n            DateOfBirth: this.state.DateOfBirth,\r\n            Guarantor_Name: this.state.Guarantor_Name,\r\n            DateOfService: this.state.DateOfService,\r\n        }; // construct from state\r\n        this.props.onSearch(searchParams);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const mystyle = {\r\n            position: \"relative\",\r\n            top: \"45%\",\r\n            width: \"200px\",\r\n        };\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        {/* {errors.map((error) => (\r\n            <p style={{ color: \"red\" }} key={error}>\r\n              Error: {error}\r\n            </p>\r\n          ))} */}\r\n                        <Form.Row>\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridInvoiceNum\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    Invoice #{\" \"}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    name=\"Invoice_Num\"\r\n                                    value={this.state.Invoice_Num}\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridFirstName\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    First Name{\" \"}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"Patient_First_Name\"\r\n                                    value={this.state.Patient_First_Name}\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridLastName\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    Last Name{\" \"}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"Patient_Last_Name\"\r\n                                    value={this.state.Patient_Last_Name}\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridMRN\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    MRN{\" \"}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"MRN\"\r\n                                    value={this.state.MRN}\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridDOS\"\r\n                                className=\"col-md-3 mb-3\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    Date Of Service\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    min=\"1900-01-01\"\r\n                                    max=\"2999-12-31\"\r\n                                    placeholder=\"dos\"\r\n                                    value={this.state.DateOfService}\r\n                                    name=\"DateOfService\"\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridDOB\"\r\n                                className=\"col-md-3 mb-3\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    Date Of Birth{\" \"}\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    min=\"1900-01-01\"\r\n                                    max=\"2999-12-31\"\r\n                                    placeholder=\"dob\"\r\n                                    value={this.state.DateOfBirth}\r\n                                    name=\"DateOfBirth\"\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridName\"\r\n                                className=\"col-md-3 mb-3\"\r\n                            >\r\n                                <Form.Label className=\"font-weight-bold\">\r\n                                    Guarantor Name\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={this.state.Guarantor_Name}\r\n                                    name=\"Guarantor_Name\"\r\n                                    onChange={this.handleChange}\r\n                                    style={{ border: \".5pxpx solid black\" }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group\r\n                                as={Col}\r\n                                xs=\"auto\"\r\n                                controlId=\"formGridName\"\r\n                                className=\"col-md-3 mb-3\"\r\n                            >\r\n                                <Form.Label> </Form.Label>\r\n                                <Button style={mystyle} type=\"submit\">\r\n                                    Search\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\invoiceService.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\constants.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\services\\loginService.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Dashboard.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\AgGridSpecific\\CustomLoadingCellRenderer.jsx",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\utils\\util.js",[],"C:\\Users\\user\\Desktop\\Prathyusha\\react projects new\\grid-web-app\\src\\components\\Logout.jsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":6,"column":5,"nodeType":"85","messageId":"86","endLine":6,"endColumn":11},{"ruleId":"83","severity":1,"message":"87","line":8,"column":5,"nodeType":"85","messageId":"86","endLine":8,"endColumn":13},{"ruleId":"83","severity":1,"message":"88","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"89","line":68,"column":13,"nodeType":"85","messageId":"86","endLine":68,"endColumn":19},{"ruleId":"83","severity":1,"message":"90","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"91","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":18},{"ruleId":"83","severity":1,"message":"89","line":58,"column":17,"nodeType":"85","messageId":"86","endLine":58,"endColumn":23},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useState' is defined but never used.","'errors' is assigned a value but never used.","'Search' is defined but never used.","'validate' is defined but never used.","no-global-assign","no-unsafe-negation"]